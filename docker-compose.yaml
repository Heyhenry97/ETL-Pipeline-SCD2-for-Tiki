version: '3'
x-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./env_files:/opt/airflow/env_files
    - ./airflow.cfg:/opt/airflow/airflow.cfg
  network_mode: af_network
  env_file:
    - ./env_files/dev.env


services:
  db:
    image: postgres:16
    container_name: af_pg
    environment:
      POSTGRES_USER: af_user
      POSTGRES_PASSWORD: af_pass
      POSTGRES_DB: af_db
    volumes:
      - af-db-volume:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    network_mode: af_network


  airflow-webserver:
    <<: *airflow-common
    depends_on:
      - db
    container_name: af_webserver
    command: webserver  
    ports:
      - '8080:8080'

  airflow-scheduler:
    <<: *airflow-common
    container_name: af_scheduler
    depends_on:
      - db
    command: scheduler


  airflow-init:
    <<: *airflow-common
    depends_on:
      - db
    container_name: af_init
    command: db migrate  


  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: 12345678
    volumes:
      - af-minio-volume:/data
    command: server /data --console-address ":9001"
    network_mode: af_network


  pg-tiki:  # For storing TIKI's data
    image: postgres:16
    container_name: pg-tiki
    environment:
      POSTGRES_DB: dw_tiki
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_password
    ports:
      - "45432:5432"
    volumes:
      - af-pg-tiki-volume:/var/lib/postgresql/data
    network_mode: af_network
    
volumes:
  af-db-volume:
  af-minio-volume:
  af-pg-tiki-volume:
